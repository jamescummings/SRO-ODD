<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:s="http://purl.oclc.org/dsdl/schematron" xml:lang="en">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>SRO Transcription Schema</title>
           </titleStmt>
         <publicationStmt>
            <p>Unpublished first draft </p>
         </publicationStmt>
         <sourceDesc>
            <p>Derived from an analysis of 4 files from ./</p>
         </sourceDesc>
     </fileDesc>
     <encodingDesc>
       <projectDesc><p>Stationers' Register Online</p></projectDesc>
     </encodingDesc>
   </teiHeader>
   <text>
      <body>
        <div>
          <head>Encoding Guidelines for SRO Transcription schema</head>
          <p>Encoding guidelines could be placed here</p>
        </div>
      
      
      <!-- 
    JC: ToDo
   
   - add <ref> elementdone
   - constrained values for all editors etc.done
   - persname @role schematron 
   - orgName @role = enterer
   - add <del>done
   - all entries to have an iddone
   - all entries to have an ab/@type='metadata'done
   
   
   
   
      
      -->
      
      
        <div>
          <head>Formal Schema Declarations</head>
            <schemaSpec ident="SRO-transcription" start="TEI ">
            <moduleRef key="tei"/>
            <classRef key="model.persNamePart"/>
            
            <!-- Names and Dates -->
            <moduleRef key="namesdates" include="orgName persName surname forename placeName"/>
            
            
              <elementSpec ident="persName" mode="change">
                <constraintSpec ident="pesrName-role" scheme="isoschematron" >
                  <constraint>
                    <s:report test="@role and not(@role='stationer' or @role='non-stationer')">If @role attribute appears on a persName it must be one of: stationer, non-stationer, enterer, licenser, authoriser.</s:report>
                  </constraint>
                </constraintSpec>
             </elementSpec>
              
              <elementSpec ident="orgName" mode="change">
                <constraintSpec ident="pesrName-role" scheme="isoschematron" >
                  <constraint>
                    <s:report test="@role and not(@role='enterer')">If @role attribute appears on a orgName it must be 'enterer'.</s:report>
                  </constraint>
                </constraintSpec>
              </elementSpec>
              
            
            
            <!--Core-->
            <moduleRef key="core"
                       include="p foreign hi desc gap unclear num date list item head note pb lb respStmt resp title choice abbr expan corr sic orig reg add ref del"/>
            
            <!-- provide valList for num/@type -->
            <elementSpec ident="num" mode="change">
               <attList>
                  <attDef ident="type" mode="change">
                     <valList mode="add" type="closed">
                        <valItem ident="halfpence"><desc>The number is a half penny</desc></valItem>
                        <valItem ident="pence"><desc>The number is pence</desc></valItem>
                        <valItem ident="poundsAsPence"><desc>The number is pounds represented in a 'value' attribute as pence</desc></valItem>
                        <valItem ident="shillingsAsPence"><desc>The number is shillings represented in a 'value' attribute as pence </desc></valItem>
                        <valItem ident="totalPence"><desc>The number provides in a 'value' attribute the total number of pence of its children</desc></valItem>
                        <valItem ident="matchedNumber"><desc>The number has been matched in conversion</desc></valItem>
                        <valItem ident="notMatched"><desc>The number was not matched for automatic conversion</desc></valItem>
                       <valItem ident="works"><desc>The number is a count of the number of works mentioned in an entry</desc></valItem>
                       <valItem ident="enterers"><desc>The number is a count of the number people entering works in an entry</desc></valItem>
                       <valItem ident="other"><desc>The number is some other type of number</desc></valItem>
                        
                     </valList>
                  </attDef>
                </attList>
            </elementSpec>
              
            <elementSpec ident="note" mode="change">
              <constraintSpec ident="status-note-in-ab" scheme="isoschematron" >
                <constraint>
                  <s:report test="parent::tei:ab[@type='metadata'] and @type='status' and 
                    not(@subtype='other' 
                    or @subtype='annotated'
                    or @subtype='cancelled' 
                    or @subtype='entered' 
                    or @subtype='incomplete' 
                    or @subtype='notPrinted'
                    or @subtype='reassigned'
                    or @subtype='shared'
                    or @subtype='stock'
                    or @subtype='unknown'
                    )">If a status note appears inside a metadata block it must have a subtype attribute of 'annotated', 'cancelled', 'entered', 'incomplete', 'notPrinted', 'reassigned', 'shared', 'stock', 'unknown' or 'other'. Once edited an entry should not have an 'unknown' status.</s:report>
                </constraint>
              </constraintSpec>
              
              
              <attList>
                  <attDef ident="anchored" mode="delete"/>
                  <attDef ident="targetEnd" mode="delete"/>
                  <attDef ident="target" mode="delete"/>
                 
                 <attDef ident="type" mode="change">
                   <valList mode="add" type="semi">
                     <valItem ident="register"><desc>The note is from the register</desc></valItem>
                     <valItem ident="arber"><desc>The note is provided by Arber</desc></valItem>
                     <valItem ident="editorial"><desc>The note is editorial and provided by the project</desc></valItem>
                     <valItem ident="status"><desc>The note is about the status of an entry</desc></valItem>
                     <valItem ident="other"><desc>The note is some other type of note</desc></valItem>
                   </valList>
                 </attDef>
                 <!-- add list of @type values: register, arber, editorial, other -->
               </attList>
              
            </elementSpec>
            
           <elementSpec ident="gap" mode="change">
             <attList>
               <attDef ident="hand" mode="delete"/>
             </attList>
           </elementSpec>
           
           
           
           <elementSpec ident="unclear" mode="change">
             <attList>
               <attDef ident="hand" mode="delete"/>
             </attList>
           </elementSpec>
           
           
            
            <!--Header-->
            
            <moduleRef key="header"
                       include="teiHeader fileDesc titleStmt funder principal publicationStmt distributor availability licence sourceDesc encodingDesc projectDesc revisionDesc change idno"/>
            
            <!-- provide valList for num/@type -->
            <elementSpec ident="idno" mode="change">
               <attList>
                  <attDef ident="type" mode="change">
                     <valList mode="add" type="semi">
                       <valItem ident="ArberRef"><desc>The idno is a reference to Arber</desc></valItem>
                       <valItem ident="RegisterRef"><desc>The idno is a reference to the Register</desc></valItem>
                       <valItem ident="RegisterID"><desc>The idno is an ID of the Register page</desc></valItem>
                       <valItem ident="other"><desc>The idno is some other type of reference</desc></valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            
            
            <!--Transcr-->
            <moduleRef key="transcr" include="fw space am ex supplied"/>
            
            <!--Checking module linking-->
            <moduleRef key="linking" include="ab anchor seg"/>
            
            <elementSpec ident="anchor" mode="change">
               <attList>
                  <attDef ident="type" mode="change">
                     <valList mode="add" type="semi">
                        <valItem ident="noteStart"><desc>This is the startpoint of a note marked by anchor elements</desc></valItem>
                        <valItem ident="noteEnd"><desc>This is the endpoint of a note marked by anchor elements</desc></valItem>
                    </valList>
                  </attDef>
               </attList>
            </elementSpec>
            
            <elementSpec ident="seg" mode="change">
               <attList>
                  <attDef ident="type" mode="change">
                     <valList mode="add" type="semi">
                        <valItem ident="fee"><desc>This segment of text encloses a fee paid</desc></valItem>
                        <valItem ident="notFee"><desc>This segment of text encloses something that is not a fee paid</desc></valItem>
                        <valItem ident="other"><desc>This segment of text encloses something else</desc></valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            
            
            <elementSpec ident="ab" mode="change">
               <constraintSpec ident="ab-in-entry" scheme="isoschematron" >
                  <constraint>
                     <s:report test="not(@type='metadata') and ancestor::tei:div[@type='entry']">If 'ab' appears inside an entry div it must have a type attribute of 'metadata'.</s:report>
                  </constraint>
                </constraintSpec>
              <constraintSpec ident="ab-not-in-entry" scheme="isoschematron" >
                <constraint>
                  <s:report test="@type='metadata' and not(ancestor::tei:div[@type='entry'])">If 'ab' has a metadata type attribute value it must appear inside an entry div.</s:report>
                </constraint>
              </constraintSpec>
               <constraintSpec ident="date-in-ab" scheme="isoschematron">
                  <constraint>
                     <s:report test="@type='metadata' and ancestor::tei:div[@type='entry'] and not(tei:date)">Metadata block must contain a date.</s:report>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="arber-in-ab" scheme="isoschematron">
                  <constraint>
                     <s:report test="@type='metadata' and ancestor::tei:div[@type='entry'] and not(tei:idno/@type='ArberRef')">Metadata block must contain a reference to Arber in an 'idno' of type 'ArberRef'.</s:report>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="register-in-ab" scheme="isoschematron">
                  <constraint>
                     <s:report test="@type='metadata' and ancestor::tei:div[@type='entry'] and not(tei:idno/@type='RegisterRef')">Metadata block must contain a reference to the Register in an 'idno' of type 'RegisterRef'.</s:report>
                  </constraint>
               </constraintSpec>
              <constraintSpec ident="register-in-ab" scheme="isoschematron">
                <constraint>
                  <s:report test="@type='metadata' and ancestor::tei:div[@type='entry'] and not(tei:idno/@type='RegisterID')">Metadata block must contain a reference to the Register ID in an 'idno' of type 'RegisterID'.</s:report>
                </constraint>
              </constraintSpec>
            </elementSpec>
            
            
            <!--Textstructure-->
            <moduleRef key="textstructure" include="TEI text body div"/>
            <elementSpec ident="TEI" mode="change">
               <attList>
                  <attDef ident="version" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="type" mode="delete"/>
                 <attDef ident="subtype" mode="delete"/>
                 <attDef ident="rend" mode="delete"/>
                 <attDef ident="cert" mode="delete"/>
                 <attDef ident="facs" mode="delete"/>
               </attList>
            </elementSpec>
            
            <elementSpec ident="text" mode="change">
               <attList>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="type" mode="delete"/>
               </attList>
            </elementSpec>
            
            <elementSpec ident="body" mode="change">
               <attList>
                  <attDef ident="resp" mode="delete"/>
               </attList>
            </elementSpec>
            
            <elementSpec ident="div" mode="change">
              <constraintSpec ident="entry-in-entry" scheme="isoschematron" >
                  <constraint>
                    <s:report test="@type='entry' and .//tei:div[@type='entry']">You may not hve an entry inside another entry</s:report>
                  </constraint>
                </constraintSpec>
              <constraintSpec ident="entry-needs-ID" scheme="isoschematron" >
                <constraint>
                  <s:report test="@type='entry' and not(@xml:id)]">You must have an xml:id attribute on an entry</s:report>
                </constraint>
              </constraintSpec>
              <constraintSpec ident="entry-needs-ab" scheme="isoschematron" >
                <constraint>
                  <s:report test="@type='entry' and not(ab[@type='metadata'])]">You must have an ab element with a type attribute of 'metadata' in any entry</s:report>
                </constraint>
              </constraintSpec>
               <attList>
                  <attDef ident="type" mode="change" usage="req">
                     <valList mode="add" type="closed">
                        <valItem ident="accounts"><desc>The division contains accounts</desc></valItem>
                        <valItem ident="apprentices"><desc>The division contains information about apprenticies</desc></valItem>
                        <valItem ident="charges"><desc>The division contains charges</desc></valItem>
                        <valItem ident="dinners"><desc>The division contains information about dinners</desc></valItem>
                        <valItem ident="entries"><desc>The division contains registration entries</desc></valItem>
                        <valItem ident="entry"><desc>The division contains a single registration entry</desc></valItem>
                        <valItem ident="entryGrp"><desc>The division contains a group of registration entries</desc></valItem>
                        <valItem ident="fines"><desc>The division contains a information about fines</desc></valItem>
                        <valItem ident="freemen"><desc>The division contains information about freemen</desc></valItem>
                        <valItem ident="notEntries"><desc>The division contains a group of material that is not an entry</desc></valItem>
                        <valItem ident="notEntry"><desc>The division contains material that is not an entry</desc></valItem>
                        <valItem ident="other"><desc>The division contains other material</desc></valItem>
                        <valItem ident="payments"><desc>The division contains payments</desc></valItem>
                        <valItem ident="receipts"><desc>The division contains receipts</desc></valItem>
                        <valItem ident="folio"><desc>The division contains entries on a folio</desc></valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            
            
            <!-- Various classes -->
           <!-- no @change -->
           <classSpec ident="att.global.change" type="atts" mode="delete"/>
           <!-- only @rend -->
           <classSpec ident="att.global.rendition" type="atts" mode="change">
             <attList>
               <attDef ident="rendition" mode="delete"/>
               <attDef ident="style" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.global.linking" type="atts" mode="change">
             <attList>
               <attDef ident="synch" mode="delete"/>
               <attDef ident="sameAs" mode="delete"/>
               <attDef ident="copyOf" mode="delete"/>
               <attDef ident="next" mode="delete"/>
               <attDef ident="prev" mode="delete"/>
               <attDef ident="exclude" mode="delete"/>
               <attDef ident="select" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.global.source" type="atts" mode="delete"/>
           
           <classSpec ident="att.global" type="atts" mode="change">
             <attList>
               <attDef ident="xml:base" mode="delete"/>
               <attDef ident="xml:space" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.declaring" type="atts" mode="delete"/>
           <classSpec ident="att.declarable" type="atts" mode="delete"/>
           <classSpec ident="att.written" type="atts" mode="delete"/>
           <classSpec ident="att.divLike" type="atts" mode="delete"/>
           <classSpec ident="att.datable.iso" type="atts" mode="delete"/> 
           <classSpec ident="att.datable.custom" type="atts" mode="delete"/>
           <classSpec ident="att.editLike" type="atts" mode="delete"/>
           <classSpec ident="att.fragmentable" type="atts" mode="delete"/>
           
           
           <classSpec ident="att.datable" type="atts" mode="change">
             <attList>
               <attDef ident="calendar" mode="delete"/>
               <attDef ident="period" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.dimensions" type="atts" mode="change">
             <attList>
               <attDef ident="unit" mode="delete"/>
               <attDef ident="quantity" mode="delete"/>
               <attDef ident="extent" mode="delete"/>
               <attDef ident="precision" mode="delete"/>
               <attDef ident="scope" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.damaged" type="atts" mode="change">
             <attList>
               <attDef ident="degree" mode="delete"/>
               <attDef ident="group" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.divLike" type="atts" mode="change">
             <attList>
               <attDef ident="org" mode="delete"/>
               <attDef ident="sample" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.editLike" type="atts" mode="change">
             <attList>
               <attDef ident="evidence" mode="delete"/>
               <attDef ident="instant" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.naming" type="atts" mode="change">
             <attList>
               <attDef ident="nymRef" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.pointing" type="atts" mode="change">
             <attList>
               <attDef ident="targetLang" mode="delete"/>
               <attDef ident="evaluate" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.pointing.group" type="atts" mode="change">
             <attList>
               <attDef ident="domains" mode="delete"/>
               <attDef ident="targFunc" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.segLike" type="atts" mode="change">
             <attList>
               <attDef ident="function" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.timed" type="atts" mode="change">
             <attList>
               <attDef ident="start" mode="delete"/>
               <attDef ident="end" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.personal" type="atts" mode="change">
             <attList>
               <attDef ident="full" mode="delete"/>
               <attDef ident="sort" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.canonical" type="atts" mode="change">
             <attList>
               <attDef ident="key" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec ident="att.datcat" type="atts" mode="delete"/>
           <classSpec ident="att.segLike" type="atts" mode="delete"/>
           
           
           <classSpec ident="att.ranging" type="atts" mode="change">
             <attList>
               <attDef ident="confidence" mode="delete"/>
             </attList>
           </classSpec>
           
           
           <classSpec ident="att.sortable" type="atts" mode="delete"/>
           
           <classSpec ident="att.spanning" type="atts" mode="delete"/>
           
           <classSpec ident="att.timed" type="atts" mode="delete"/>

              <classSpec ident="att.global.responsibilty" type="atts" mode="change">
                <attList>
                  <attDef ident="synch" mode="change">
                    <valList mode="add" type="closed">
                      <valItem ident="#arber"><desc>The person responsible for this was Arber</desc></valItem>
                      <valItem ident="#editor"><desc>The person responsible for this was an SRO editor</desc></valItem>
                      <valItem ident="#register"><desc>The register was the source for this</desc></valItem>
                      <valItem ident="#JC"><desc>The person responsible for this was James Cummings</desc></valItem>
                      <valItem ident="#GB"><desc>The person responsible for this was Giles Bergel</desc></valItem>
                      <valItem ident="#IG"><desc>The person responsible for this was Ian Gadd</desc></valItem>
                      <valItem ident="#JC"><desc>The person responsible for this was James Cummings</desc></valItem>
                      <valItem ident="#BH"><desc>The person responsible for this was Ben Higgins</desc></valItem>
                      <valItem ident="#JC"><desc>The person responsible for this was James Cummings</desc></valItem>
                      <valItem ident="#EM"><desc>The person responsible for this was Eleanor Warmington</desc></valItem>
                      <valItem ident="#EM"><desc>The person responsible for this was Emma Bashforth</desc></valItem>
                    </valList>
                  </attDef>
                </attList>
              </classSpec>
           
           
           
         </schemaSpec>
        </div>
      </body>
   </text>
</TEI>
